---
---
![](images/logo.png){width=500}

 NOTE: THIS PROJECT IS UNDER DEVELOPMENT AND MAY NOT FUNCTION AS EXPECTED UNTIL THIS MESSAGE GOES AWAY

## Introduction {#introduction}

<!-- TODO nf-core: Write a 1-2 sentence summary of what data the pipeline is for and what it does -->

**nf-core/pathogensurveillance** is a population genomic pipeline for pathogen diagnosis, variant detection, and biosurveillance.
The pipeline accepts the paths to raw reads for one or more organisms (in the form of a CSV file) and creates reports in the form of interactive HTML reports or PDF documents.
Significant features include the ability to analyze unidentified eukaryotic and prokaryotic samples, creation of reports for multiple user-defined groupings of samples, automated discovery and downloading of reference assemblies from NCBI RefSeq, and rapid initial identification based on k-mer sketches followed by a more robust core genome phylogeny and SNP-based phylogeny.

The pipeline is built using [Nextflow](https://www.nextflow.io), a workflow tool to run tasks across multiple compute infrastructures in a very portable manner.
It uses Docker/Singularity containers making installation trivial and results highly reproducible.
The [Nextflow DSL2](https://www.nextflow.io/docs/latest/dsl2.html) implementation of this pipeline uses one container per process which makes it much easier to maintain and update software dependencies.
Where possible, these processes have been submitted to and installed from [nf-core/modules](https://github.com/nf-core/modules) in order to make them available to all nf-core pipelines, and to everyone within the Nextflow community!

<!-- TODO nf-core: Add full-sized test dataset and amend the paragraph below if applicable -->

On release, automated continuous integration tests run the pipeline on a full-sized dataset on the AWS cloud infrastructure.
This ensures that the pipeline runs on AWS, has sensible resource allocation defaults set to run on real-world data sets, and permits the persistent storage of results to benchmark between pipeline releases and other analysis sources.The results obtained from the full-sized test can be viewed on the [nf-core website](https://nf-co.re/pathogensurveillance/results).

## Pipeline summary {#pipelinesummary}

-   Download sequences and references if they are not provided locally
-   Quickly obtain several initial sample references (`bbmap`)
-   More accurately select appropriate reference genomes. Genome "sketches" are compared between first-pass references, samples, and any references directly provided by the user (`sourmash`)
-   Genome assembly
    -   Illumina shortreads: (`spades`)
    -   Pacbio or Oxford Nanopore longreads: (`flye`)
-   Genome annotation (`bakta`)
-   Align reads to reference sequences (`bwa`)
-   Variant calling and filtering (`graphtyper`, `vcflib`)
-   Determine relationship between samples and references
    -   Build SNP tree from variant calls (`iqtree`)
    -   For Prokaryotes:
        -   Identify shared orthologs (`pirate`)
        -   Build tree from core genome phylogeny (`iqtree`)
    -   For Eukaryotes:
        -   Identify BUSCO genes (`busco`)
        -   Build tree from BUSCO genes (`read2tree`)
-   Generate interactive html report/pdf file
    -   Sequence and assembly information (`fastqc, multiqc, quast`)
    -   sample identification tables and heatmaps
    -   Phylogenetic trees from genome-wide SNPs and core genes
    -   minimum spanning network

## Flowchart {#flowchart}

![](images/pipeline_diagram.png)
